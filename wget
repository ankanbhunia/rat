#!/bin/bash

jumpserver=s2514643@daisy2.inf.ed.ac.uk

# Parse command line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        --url) url="$2"; shift ;;
        --jumpserver) jumpserver="$2"; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

# Check if required arguments are provided
if [[ -z "$url" || -z "$jumpserver" ]]; then
    echo "Usage: $0 --url <URL> --jumpserver <username@server_b>"
    exit 1
fi

# Function to extract repository name from GitHub URL
get_repo_name() {
    echo "$1" | sed -E -n 's#https://github.com/([^/]+)/([^/]+)(\.git)?#\2#p'
}

# Check if the URL is a GitHub repository
if [[ "$url" =~ ^https://github.com/ ]]; then
    repo_name=$(get_repo_name "$url")

    # Clone GitHub repository from server_b
    echo "git clone $url /tmp/$repo_name"
    ssh "$jumpserver" "git clone $url /tmp/$repo_name"
    scp -r "$jumpserver":/tmp/$repo_name .
    ssh "$jumpserver" "rm -rf /tmp/$repo_name"

    echo "GitHub repository cloned to: $repo_name"
else
    # Extract filename from URL
    filename=$(basename "$url")

    # Download file on server_b

    echo "wget -O /tmp/$filename '$url'"

    ssh "$jumpserver" "wget -O /tmp/$filename '$url'"

    # Transfer file to local machine using scp with key-based authentication
    scp "$jumpserver":/tmp/$filename .

    # Cleanup on server_b (optional)
    ssh "$jumpserver" "rm /tmp/$filename"

    echo "Download complete. File saved as: $filename"
fi
